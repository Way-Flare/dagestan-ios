default_platform(:ios)

platform :ios do
  desc "Load ASC API Key information to use in subsequent lanes"
  lane :load_asc_api_key do
    app_store_connect_api_key(
      key_id: ENV["ASC_KEY_ID"],
      issuer_id: ENV["ASC_ISSUER_ID"],
      key_content: ENV["ASC_KEY"]
    )
  end

 desc "Bump build number based on most recent TestFlight build number"
 lane :fetch_and_increment_build_number do
  #fetch read your app identifier defined in your Appfile
  app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
  api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]
 
  current_version = get_version_number(target: "DagestanTrails")
  latest_build_number = latest_testflight_build_number(
    api_key: api_key,
    version: current_version,
    app_identifier: app_identifier
  )
  increment_build_number(
    build_number: (latest_build_number + 1),
  )
 end
 
 desc "Installs signing certificate in the keychain and downloads provisioning profiles from App Store Connect"
 lane :prepare_signing do |options|
   team_id = ENV["TEAM_ID"]
   api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

   keychain_name = "signing"
   keychain_password = "temp"

   delete_keychain(
     name: keychain_name
   ) if File.exist? File.expand_path("~/Library/Keychains/#{keychain_name}-db")

   create_keychain(
     name: keychain_name,
     password: keychain_password,
     default_keychain: true,
     unlock: true,
     timeout: 3600
   )

   import_certificate(
     certificate_path: ENV["SIGNING_KEY_FILE_PATH"],
     certificate_password: ENV["SIGNING_KEY_PASSWORD"],
     keychain_name: keychain_name,
     keychain_password: keychain_password
   )

   # fetches and installs provisioning profiles from ASC
   sigh(
     adhoc: options[:adhoc],
     api_key: api_key,
     readonly: false
   )
 end
 
desc "Generate xcode project with tuist"
lane :generate_project do
    sh "mise x -- tuist clean --path #{ENV["PROJECT_PATH"]}"
    sh "mise x -- tuist install --path #{ENV["PROJECT_PATH"]}"
    sh "mise x -- tuist generate --path #{ENV["PROJECT_PATH"]}"
  end

desc "Build the iOS app for release"
 lane :build_release do |options|
  app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
 
  profile_name = "com.WayFlare.DagestanTrails AppStore"
  output_name = "DagestanTrails-iOS"
  export_method = "app-store"

  project_path = File.expand_path("#{ENV["PROJECT_PATH"]}/DagestanTrails.xcodeproj", __dir__)
  workspace_path = File.expand_path("#{ENV["PROJECT_PATH"]}/DagestanTrails.xcworkspace", __dir__)

  UI.message("Using project path: #{project_path}")

  update_code_signing_settings(
    use_automatic_signing: false,
    path: project_path,
    team_id: ENV["TEAM_ID"],
    targets: ["DagestanTrails"],
    bundle_identifier: app_identifier,
    code_sign_identity: "Apple Distribution",
    profile_name: profile_name
  )

  gym(
    workspace: workspace_path,
    scheme: "DagestanTrails",
    silent: false, # Показать вывод сборки
    clean: true, # Очистка перед сборкой
    output_name: output_name,
    export_options: {
      method: export_method,
      provisioningProfiles: {
        app_identifier => profile_name
      }
    }
  )
end

desc "Upload to TestFlight / ASC"
lane :upload_release do
 api_key = lane_context[SharedValues::APP_STORE_CONNECT_API_KEY]

 deliver(
     api_key: api_key,
     skip_screenshots: true,
     skip_metadata: true,
     skip_app_version_update: true,
     force: true, # skips verification of HTML preview file (since this will be run from a CI machine)
     run_precheck_before_submit: false # not supported through ASC API yet
 )
end

desc "Build and upload iOS binary to TestFlight"
lane :build_upload_testflight do
  generate_project
  load_asc_api_key
  fetch_and_increment_build_number
  prepare_signing
  build_release
  upload_release
end
end
# platform :ios do
#   desc "Push a new beta build to TestFlight"
#   lane :beta do
#     sh "mise x -- tuist clean --path ../"
#     sh "mise x -- tuist install --path ../"
#     sh "mise x -- tuist generate --path ../"
#     update_project_team(
#       path: "DagestanTrails.xcodeproj",
#       teamid: "CW9ZZNL977"
#     )
#     api_key = app_store_connect_api_key(
#       key_id: "5XBBKZTV6V",
#       issuer_id: "e970bf8c-3de3-4898-8797-a0a317a62512",
#       key_filepath: "/Users/txmi/dagestan-ios/Dagestan/fastlane/AuthKey_5XBBKZTV6V.p8",
#       duration: 1200,
#       in_house: false
#     )
    
#     build_app(
# 	scheme: "DagestanTrails", 
#     	buildlog_path: "./fastlane/build_output"
#     )
#     upload_to_testflight(api_key: api_key, app_identifier: "com.WayFlare.DagestanTrails")
#   end
# end
